
<div class="container">
	<h3><%= gettext("menu.opensearch")%></h3>
	<div class='row'>
		<div class='col-xs-6'></div>
		<div class='col-xs-6'>
		 	<div id='map' style="width:840px;height:610px;" ondrop="handleDrop(event);" ondragover="allowDrop(event);" ></div>
		</div>
	</div>
	<br/>
</div>

<div class="container" id='results'></div>

<link rel="stylesheet" href="/css/customlegend.css" />
<link rel="stylesheet" href="/css/datepicker.css" />
<script src="/js/bootstrap-datepicker.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>

<script>
	var map = L.mapbox.map('map', '<%= region.map_id %>', { minZoom:<%= region.min_zoom %>, maxZoom: <%= region.max_zoom %> } )
	.setView([<%= region.target %>], 5)
	
	var map_controls = L.control.layers({
	    'Topo Map': L.mapbox.tileLayer('<%= region.map_id %>',{ attribution: 'MapBox'}).addTo(map)
	}, {}).addTo(map);
	
	
	var marker_me = L.marker([<%= region.target[0] %>,<%= region.target[1] %> ], {
	    icon: L.mapbox.marker.icon({
	      'marker-color': '#f86767'
	    })
	}).addTo(map);
	
	$('#lnglat').val("<%= region.target[1] %>,<%= region.target[0] %>")
	
	var query_results = {};
	
	$('#query').show();
	//$('#dp_startTime').datepicker();
	//$('#dp_endTime').datepicker();
	//$.datepicker.formatDate("yyyy-mm-dd")
	$('#startTime').datepicker( {format: "yyyy-mm-dd"});
	$('#endTime').datepicker({format: "yyyy-mm-dd"});
	
	var stop 	= new Date();
	var start 	= new Date(stop.getFullYear()-3, stop.getMonth(), stop.getDate(), 0,0,0,0)
	$('#endTime').datepicker("setValue", stop);
	$('#startTime').datepicker("setValue", start);
	
	function ShowForm() {
		$('#query_container').toggle();
	}

  	function NavTab( str, id ) {
		console.log(str + ","+id);
		$('#general-'+id).hide();
		$('#metadata-'+id).hide();
		$('#actions-'+id).hide();

		$('#tab-general-'+id).attr('class', '');
		$('#tab-metadata-'+id).attr('class', '');
		$('#tab-actions-'+id).attr('class', '');
		
		$('#'+str+'-'+id).show();
		$('#tab-'+str+'-'+id).attr('class', 'active');
		
		FB.XFBML.parse(); // This will render all tags on the page
		twttr.widgets.load();
  	}
	
	function FormatResponseElement(el) {
		var html = "<div class='well'>";
		html += "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
		html += "<table class='table table-condensed'>";
		html += "<tr><td width='150'>"
		
		var id = el["@id"]
		
		// take last image
		var image_url = el.image[0];
		if (image_url.url) image_url = image_url.url; 
		
		html += "&nbsp;<a href='"+ image_url+"'><img class='img-thumbnail' id='"+id+"' src=\'"+image_url+"\' width='140' ondragstart='handleDrag(event);' /></a>";
		html += "</td><td>"
		
		if( true ) {
		html += "<ul class='nav nav-tabs'>"
		
		var general_fn 		= "javascript:NavTab('general','" + id + "');";
		var metadata_fn 	= "javascript:NavTab('metadata','" + id + "');";
		var actions_fn 		= "javascript:NavTab('actions','" + id + "');";
		var tab_general_id 	= 'tab-general-'+id;
		var tab_metadata_id	= 'tab-metadata-'+id;
		var tab_actions_id 	= 'tab-actions-'+id;
		
		html += "  <li class='active' id="+ tab_general_id+"><a href="+general_fn+"><%= gettext("tabs.general")%></a></li>"
		html += "  <li id="+tab_metadata_id+"><a href="+metadata_fn+"><%= gettext("tabs.metadata")%></a></li>"
		html += "  <li id="+tab_actions_id+"><a href="+actions_fn+"><%= gettext("tabs.actions")%></a></li>"
		html += "</ul>"
		}
	
		// General Div
		if( true ) {
			html += "<div id='general-"+id + "'>"
			html += "<table class='table table-condensed'>";
			html += "<tr><td>id</td><td><b>"+el["@id"]+"</td></tr>";
			html += "<tr><td>type</td><td><b>" + el["@type"] + "</b></td></tr>"
			html += "<tr><td>name</td><td><b>" + el.displayName+ "</b></td></tr>"
			html += "</table>"
			html += "</div>"
		}
		
		// Metadata Div
		if( true ) {
			html += "<div id='metadata-"+id +"' style='display:none'>"
			html += "<table class='table table-condensed'>"
			$.each(el.properties, function(key, prop) {
				var el = prop
				if( key != "geometry") {
					html += "<tr><td><b>"+ prop["@label"] + ":</b></td><td>" + prop["@value"] + "</td></tr>"
				} else {
					// html += "<tr><td><b>geometry:</b></td><td>" + el["coordinates"] + "</td></tr>"				
				}
			})
			html += "</table></div>"
		}
		
		//Action Div
		if( true ) {
			html += "<div id='actions-"+id +"' style='display:none'>"
			html += "<table class='table table-condensed'>"
			html += "<tr><td width='100'></td><td>"
		
			var action = el.action;
			// can be a has or an array
			var typof = typeof action
			
			for( var a in action ) {
				var actionName = action[a].displayName
				html += "<b>- "+actionName+"</b>"
				html += "<br/>"
				var using = action[a].using
				for( var u in using ) {
					var el = using[u]
					if( !el["@type"] ) {
						console.log("Missing el @typw for ", actionName)
					} else if( el["@type"].indexOf("HttpRequest") > 0) {
						if( el.method == 'GET') {
							var displayName = el.displayName || el.mediaType
							html += "&nbsp;&nbsp;&nbsp;&nbsp;<a href='" + el.url+"'>" + displayName
							if( el.size ) html += " ("+el.size+")"
							if( el.duration ) html += " (" + el.duration + ")"
							html  += "</a>&nbsp;"
						}
					}
				}
				html += "<br/>"
			}
			
			html += "</td></tr></table></div>"
			html += "</td></tr>"
			html += "</table></div>";
		}
			
		if( false ) {
			$.each(el.action, function(key, val) {			
				var typof = typeof el.actions[key]
			
				switch(typof) {
				case 'object':
					html += "<b>- "+key+"</b>"
					html += "<br/>"
					$.each(el.actions[key], function(k, el) {
						if( el.objectType == 'HttpActionHandler') {
							if( el.method == 'GET') {
								html += "&nbsp;&nbsp;&nbsp;&nbsp;<a href='" + el.url+"'>" + el.displayName
								if( el.size ) html += " ("+el.size+")"
								if( el.duration ) html += " (" + el.duration + ")"
								html  += "</a>&nbsp;"
							}
						}
					})
					break;
				case 'string':
					// special cases
					//console.log("String key:"+key+" "+el.actions[key])
					switch(key) {
						case 'share':
							html += "<b>- "+key+"</b>"
							html += "<br/>"
						
							html += "&nbsp;&nbsp;&nbsp;&nbsp;"
						
							// Facebook
							html += "<div class='fb-share-button' "
							html += "data-href='" + el.actions[key] + "' "
							html += "data-type='button' "
							html += "></div>&nbsp;"
						
							//var fbpost	= "javascript:FBPost('" + el.actions[key] + "');";
							//html += "<a href="+fbpost+">Facebook</a>&nbsp;"
						
							// Twitter
							html += "<a href='https://twitter.com/intent/tweet' class='twitter-hashtag-button' "
							html += "data-text='You may found this product interesting '"
							html += " data-url='" + el.actions[key] + "' "
							html += " data-lang='en' data-related='geoss'>GEOSS Tweet</a>"
					
							break;
					
						case 'like':
							break;
						default:
							html += "- <a href='"+el.actions[key]+"'>"+key+"</a>";
							break;
					}
					break;
				default:
					console.log("unhandled typof:"+typof)
					break;
				}
				html += "<br/>"
			})
		
			//$.each(el.actions.download, function(key, val) {
			//	html += "<a href='"+ val.url+"'>"+val.displayName +" ("+val.size+")</a><br/>"
			//})
		
			//html += "<br/>Browse <a href='"+el.actions.browse+"'>Link</a>"
			//html += "<br/>Process"
		
			html += "</td></tr></table></div>"
			html += "</td></tr>"
			html += "</table></div>";
		}
	
		$('#results').append(html)
	}
		
	function SubmitQuery() {
		var nodes = <%- JSON.stringify(nodes) %>
		
		var lnglat 		= $('#lnglat').val().split(',');
		var lng			= lnglat[0];
		var lat			= lnglat[1]
		var q			= $('#q').val();
		var startTime	= $('#startTime').val();
		var endTime		= $('#endTime').val();
		
		var sources = $('#sources').val()
		
		var url = "<%=opensearch_url%>";
		url += "?q="+q;
		url += "&lat="+lat;
		url += "&lon="+lng;
		url += "&startTime="+startTime;
		url += "&endTime="+endTime;
		
		if( sources == null ) return
		
		url += "&sources="+sources.join(",")
		
		query_results = {};
		//$('#results').html("")
		console.log("GET", url);
		
		$.ajax({
			dataType: "json",
			url: url,
			success: function( data ) {
				var count = data.items.length
				console.log("Success..."+count)
				var html = "<div class='well'>"
				
				var result_format 	= "<%= gettext('results').replace('{results}', 'd') %>"
				var results 		= result_format.replace("%d", count.toString()) 
				
				html += results + "<br/></div"
				$('#results').html(html)
			
				$.each( data.items, function( key, val ) {
					//console.log("Formatting item "+key)
					var id = val["@id"]
					query_results[id] = val;
					FormatResponseElement(val);
				});
			},
			error: function(jqXHR, textStatus, errorThrown) {
  			  	console.log(textStatus, errorThrown);
			}
		})
	}
	
	ShowForm();
  
    // install click event
  	map.on('click', function(e) {
		var latlng = e.latlng
		var lat = latlng.lat.toFixed(2)
		var lng	= latlng.lng.toFixed(2)
		
		marker_me.setLatLng( latlng );
		
		$('#lnglat').val(lng +", "+lat)
  	})
 
	function FBPost( url ) {
		console.log("FBPost:"+url);
		FB.login(function(){
			FB.api('/me/ojo-nasa:share', 'post', 
				{	'geoss_product': url,
					'value':'SELF'
			}, function(response) { console.log("FB resp:"+JSON.stringify(response)); });
		}, {scope: 'publish_actions'});
	}
	
	function handleDrop(event) {
		event.stopPropagation(); // Stops some browsers from redirecting.
		event.preventDefault();

		var files 	= event.dataTransfer.files;
		
		console.log("handleDrop", JSON.stringify(files))
		
		for( var i=0; i<files.length; i++) {
			var file = files[i];
			console.log("dropped:"+JSON.stringify(file));	
		}
		
		var id = event.dataTransfer.getData('Text');
		
		console.log("handleDrop id", id)
		
		if( id != null && id != undefined && id != '') {
			console.log( "dropped id:"+id );
			var result 	= query_results[id];

			// find the download action
			for( var a in result.action){
				var action = result.action[a]
				if( action['@type'] == 'ojo:download' ) {
					var using = action.using
					for( var u in using ) {
						var uses 	= using[u]
						var url		= uses.url
						console.log(url)
						if( url.indexOf(".png") > 0 ) {
							// add image overlay
							var bbox = result.properties.geometry.coordinates[0]
							var imageBounds = [bbox[0].reverse().map(parseFloat), bbox[2].reverse().map(parseFloat)]
							
							console.log("Add to map", JSON.stringify(imageBounds))
							var options 	= {opacity: 0.8, attribution: "Digiglobe"}
							var newLayer 	= L.imageOverlay(url, imageBounds, options).addTo(map);
							map_controls.addOverlay( newLayer, id );
							break;
						} else if( url.indexOf(".topojson")>0) {
							console.log("loading topojson", url)
							$.ajax({
								type: 'GET',
								url: url,
								async: true
							})
							.success( function(data) {
								if( data && data.objects ) {
									console.log("Returned good data")
					
									var data 	= topojson.feature(data, data.objects['surface_water']);
				
									var newLayer =  L.geoJson(null, { style: { color: '#ff0000', weight: 1 }})
									newLayer.addData(data);
									newLayer.addTo(map);
									map_controls.addOverlay( newLayer, id );
								} else {
									console.log("Returned bad data")
								}
							})
							.fail(function(jqxhr, textStatus, error ) { 
								var err = textStatus + ', ' + error;
								alert( "Request Failed: " + err);
							});
							break
						}
					}
				} else {
					console.log("action", action['@type'])
				}
			}
		}
	}
	
	function allowDrop(event) {
		event.preventDefault();    // cancel the ev event
	}

	function handleDrag(event) {
		var id = event.target.id
		event.dataTransfer.setData('Text', id);		
		//console.log( "drag: " + id);
	}
	
	
</script>

<!-- TWITTER THING -->
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');
</script>

<!-- FACEBOOK THING -->
<div id="fb-root"></div>
<script>
  window.fbAsyncInit = function() {
    FB.init({
      appId      : '<%= social_envs.FACEBOOK_APP_ID %>',
      status     : true,
      xfbml      : true
    });
  };

  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = "//connect.facebook.net/en_US/all.js";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, 'script', 'facebook-jssdk'));
</script>

